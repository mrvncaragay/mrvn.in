{"version":3,"sources":["context/index.js","hooks/useWindowDimensions.js","App.js","index.js","context/state.js","context/reducer.js"],"names":["StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","getWindowDimensions","window","width","innerWidth","height","innerHeight","App","useContext","darkMode","useState","windowDimensions","setWindowDimensions","useEffect","fn","debounce","addEventListener","removeEventListener","useWindowDimensions","style","backgroundColor","params","particles","number","density","enable","value_area","line_linked","opacity","move","speed","size","anim","opacity_min","interactivity","events","onclick","mode","modes","push","particles_nb","retina_detect","ReactDOM","render","StrictMode","state","action","type","payload","document","getElementById"],"mappings":"sLAIaA,EAAeC,0BACfC,EAAgB,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,QAASC,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,SACtD,OAAO,cAACL,EAAaM,SAAd,CAAuBC,MAAOC,qBAAWL,EAASC,GAAlD,SAAkEC,K,yBCH1E,SAASI,IAAuB,IAAD,EACqBC,OACnD,MAAO,CACNC,MAH6B,EACtBC,WAGPC,OAJ6B,EACHC,aCwDbC,MAvDf,WAAgB,IAAD,EFIoBC,qBAAWhB,GEHpCiB,EADK,oBACLA,SADK,EDMA,WAAgC,IAAD,EACGC,mBAAST,KADZ,mBACtCU,EADsC,KACpBC,EADoB,KAa7C,OAVAC,qBAAU,WAKT,IAAMC,EAAKC,mBAAS,KAJpB,WACCH,EAAoBX,QAKrB,OADAC,OAAOc,iBAAiB,SAAUF,GAC3B,kBAAMZ,OAAOe,oBAAoB,SAAUH,MAChD,IAEIH,ECjBmBO,GAAlBb,EAFM,EAENA,OAAQF,EAFF,EAEEA,MAEhB,OACC,cAAC,IAAD,CACCgB,MAAO,CAAEC,gBAAiBX,GAC1BJ,OAAQA,EACRF,MAAOA,EACPkB,OAAQ,CACPC,UAAW,CACVC,OAAQ,CACPxB,MAAO,GACPyB,QAAS,CACRC,QAAQ,EACRC,WAAY,OAGdC,YAAa,CACZF,QAAQ,EACRG,QAAS,KAEVC,KAAM,CACLC,MAAO,IAERC,KAAM,CACLhC,MAAO,KAER6B,QAAS,CACRI,KAAM,CACLP,QAAQ,EACRK,MAAO,EACPG,YAAa,MAIhBC,cAAe,CACdC,OAAQ,CACPC,QAAS,CACRX,QAAQ,EACRY,KAAM,SAGRC,MAAO,CACNC,KAAM,CACLC,aAAc,KAIjBC,eAAe,MChDnBC,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,CAAehD,aCRW,CAC3Ba,SAAU,WDOkCd,QERjB,SAACkD,EAAOC,GACnC,OAAQA,EAAOC,MACd,IAAK,WACJ,OAAO,2BACHF,GADJ,IAECpC,SAAUqC,EAAOE,QAAU,UAAY,SAGzC,QACC,OAAOH,IFDR,SACC,cAAC,EAAD,QAGFI,SAASC,eAAe,U","file":"static/js/main.e108b0a0.chunk.js","sourcesContent":["import React, { createContext, useContext, useReducer } from 'react';\nexport { StateReducer } from './reducer';\nexport { InitialState } from './state';\n\nexport const StateContext = createContext();\nexport const StateProvider = ({ reducer, initialState, children }) => {\n\treturn <StateContext.Provider value={useReducer(reducer, initialState)}>{children}</StateContext.Provider>;\n};\n\nexport const useStateValue = () => useContext(StateContext);\n","import { useState, useEffect } from 'react';\nimport { debounce } from 'lodash/fp';\n\nfunction getWindowDimensions() {\n\tconst { innerWidth: width, innerHeight: height } = window;\n\treturn {\n\t\twidth,\n\t\theight,\n\t};\n}\n\nexport default function useWindowDimensions() {\n\tconst [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n\tuseEffect(() => {\n\t\tfunction handleResize() {\n\t\t\tsetWindowDimensions(getWindowDimensions());\n\t\t}\n\n\t\tconst fn = debounce(300, handleResize);\n\t\twindow.addEventListener('resize', fn);\n\t\treturn () => window.removeEventListener('resize', fn);\n\t}, []);\n\n\treturn windowDimensions;\n}\n","import React from 'react';\nimport { useStateValue } from './context';\nimport Particles from 'react-particles-js';\nimport useWindowDimensions from './hooks/useWindowDimensions';\n\nfunction App() {\n\tconst [{ darkMode }] = useStateValue();\n\tconst { height, width } = useWindowDimensions();\n\n\treturn (\n\t\t<Particles\n\t\t\tstyle={{ backgroundColor: darkMode }}\n\t\t\theight={height}\n\t\t\twidth={width}\n\t\t\tparams={{\n\t\t\t\tparticles: {\n\t\t\t\t\tnumber: {\n\t\t\t\t\t\tvalue: 60,\n\t\t\t\t\t\tdensity: {\n\t\t\t\t\t\t\tenable: true,\n\t\t\t\t\t\t\tvalue_area: 1500,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tline_linked: {\n\t\t\t\t\t\tenable: true,\n\t\t\t\t\t\topacity: 0.03,\n\t\t\t\t\t},\n\t\t\t\t\tmove: {\n\t\t\t\t\t\tspeed: 0.3,\n\t\t\t\t\t},\n\t\t\t\t\tsize: {\n\t\t\t\t\t\tvalue: 1.5,\n\t\t\t\t\t},\n\t\t\t\t\topacity: {\n\t\t\t\t\t\tanim: {\n\t\t\t\t\t\t\tenable: true,\n\t\t\t\t\t\t\tspeed: 1,\n\t\t\t\t\t\t\topacity_min: 0.1,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tinteractivity: {\n\t\t\t\t\tevents: {\n\t\t\t\t\t\tonclick: {\n\t\t\t\t\t\t\tenable: true,\n\t\t\t\t\t\t\tmode: 'push',\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tmodes: {\n\t\t\t\t\t\tpush: {\n\t\t\t\t\t\t\tparticles_nb: 1,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tretina_detect: true,\n\t\t\t}}\n\t\t/>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { StateProvider, InitialState, StateReducer } from './context';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<StateProvider initialState={InitialState} reducer={StateReducer}>\n\t\t\t<App />\n\t\t</StateProvider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n","export const InitialState = {\n\tdarkMode: '#24272c',\n};\n","export const StateReducer = (state, action) => {\n\tswitch (action.type) {\n\t\tcase 'DARKMODE':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdarkMode: action.payload ? '#24272c' : '#fff',\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n"],"sourceRoot":""}